<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotWebChatHistory">
    <option name="currentConversation">
      <WebConversation>
        <option name="session">
          <ChatSession>
            <option name="messages">
              <list>
                <UIChatMessage>
                  <option name="changeToOptimize" value="true" />
                  <option name="command" value="fix" />
                  <option name="content" value="修复报错:&#10;java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:473) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:532) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:655) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]&#10;代码上下文:&#10;```java&#10;/**&#10; * Creates a new {@code ThreadPoolExecutor} with the given initial&#10; * parameters and default thread factory and rejected execution handler.&#10; * It may be more convenient to use one of the {@link Executors} factory&#10; * methods instead of this general purpose constructor.&#10; *&#10; * @param corePoolSize the number of threads to keep in the pool, even&#10; *        if they are idle, unless {@code allowCoreThreadTimeOut} is set&#10; * @param maximumPoolSize the maximum number of threads to allow in the&#10; *        pool&#10; * @param keepAliveTime when the number of threads is greater than&#10; *        the core, this is the maximum time that excess idle threads&#10; *        will wait for new tasks before terminating.&#10; * @param unit the time unit for the {@code keepAliveTime} argument&#10; * @param workQueue the queue to use for holding tasks before they are&#10; *        executed.  This queue will hold only the {@code Runnable}&#10; *        tasks submitted by the {@code execute} method.&#10; * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;&#10; *         {@code corePoolSize &lt; 0}&lt;br&gt;&#10; *         {@code keepAliveTime &lt; 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt; corePoolSize}&#10; * @throws NullPointerException if {@code workQueue} is null&#10; */&#10;public ThreadPoolExecutor(int corePoolSize,&#10;                          int maximumPoolSize,&#10;                          long keepAliveTime,&#10;                          TimeUnit unit,&#10;                          BlockingQueue&lt;Runnable&gt; workQueue) {&#10;    this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,&#10;         Executors.defaultThreadFactory(), defaultHandler);&#10;}&#10;```" />
                  <option name="cost" value="0" />
                  <option name="createdAt" value="1747818585856" />
                  <option name="localReferences">
                    <list>
                      <LocalReferences>
                        <option name="isRequestStage" value="true" />
                        <option name="range">
                          <RefRange />
                        </option>
                        <option name="uri" value="{&quot;path&quot;:&quot;file:///C:/Users/10078/Desktop/bookkeeping/bookkeeping_server/src/main/java/com/bookkeeping/config/CorsConfig.java&quot;}" />
                      </LocalReferences>
                    </list>
                  </option>
                  <option name="parser">
                    <SimpleMarkdownStreamParser>
                      <option name="columns">
                        <list>
                          <option value="4" />
                          <option value="310" />
                          <option value="132" />
                          <option value="142" />
                          <option value="125" />
                          <option value="125" />
                          <option value="123" />
                          <option value="127" />
                          <option value="117" />
                          <option value="102" />
                          <option value="119" />
                          <option value="102" />
                          <option value="139" />
                          <option value="131" />
                          <option value="117" />
                          <option value="139" />
                          <option value="131" />
                          <option value="146" />
                          <option value="160" />
                          <option value="161" />
                          <option value="146" />
                          <option value="154" />
                          <option value="154" />
                          <option value="146" />
                          <option value="149" />
                          <option value="148" />
                          <option value="146" />
                          <option value="168" />
                          <option value="146" />
                          <option value="184" />
                          <option value="146" />
                          <option value="153" />
                          <option value="146" />
                          <option value="141" />
                          <option value="140" />
                          <option value="146" />
                          <option value="143" />
                          <option value="145" />
                          <option value="124" />
                          <option value="146" />
                          <option value="167" />
                          <option value="166" />
                          <option value="146" />
                          <option value="188" />
                          <option value="124" />
                          <option value="146" />
                          <option value="135" />
                          <option value="127" />
                          <option value="132" />
                          <option value="126" />
                          <option value="139" />
                          <option value="131" />
                          <option value="132" />
                          <option value="124" />
                          <option value="139" />
                          <option value="131" />
                          <option value="125" />
                          <option value="124" />
                          <option value="139" />
                          <option value="131" />
                          <option value="138" />
                          <option value="124" />
                          <option value="139" />
                          <option value="131" />
                          <option value="125" />
                          <option value="123" />
                          <option value="127" />
                          <option value="118" />
                          <option value="117" />
                          <option value="121" />
                          <option value="116" />
                          <option value="115" />
                          <option value="121" />
                          <option value="128" />
                          <option value="124" />
                          <option value="120" />
                          <option value="130" />
                          <option value="130" />
                          <option value="123" />
                          <option value="55" />
                          <option value="5" />
                          <option value="6" />
                          <option value="2" />
                          <option value="65" />
                          <option value="71" />
                          <option value="71" />
                          <option value="54" />
                          <option value="1" />
                          <option value="69" />
                          <option value="71" />
                          <option value="70" />
                          <option value="13" />
                          <option value="65" />
                          <option value="68" />
                          <option value="52" />
                          <option value="66" />
                          <option value="69" />
                          <option value="66" />
                          <option value="55" />
                          <option value="69" />
                          <option value="38" />
                          <option value="39" />
                          <option value="42" />
                          <option value="48" />
                          <option value="59" />
                          <option value="2" />
                          <option value="42" />
                          <option value="45" />
                          <option value="44" />
                          <option value="39" />
                          <option value="61" />
                          <option value="70" />
                          <option value="58" />
                          <option value="0" />
                        </list>
                      </option>
                      <option name="content" value="修复报错:&#10;java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:473) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:532) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:655) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]&#10;代码上下文:&#10;```java&#10;/**&#10; * Creates a new {@code ThreadPoolExecutor} with the given initial&#10; * parameters and default thread factory and rejected execution handler.&#10; * It may be more convenient to use one of the {@link Executors} factory&#10; * methods instead of this general purpose constructor.&#10; *&#10; * @param corePoolSize the number of threads to keep in the pool, even&#10; *        if they are idle, unless {@code allowCoreThreadTimeOut} is set&#10; * @param maximumPoolSize the maximum number of threads to allow in the&#10; *        pool&#10; * @param keepAliveTime when the number of threads is greater than&#10; *        the core, this is the maximum time that excess idle threads&#10; *        will wait for new tasks before terminating.&#10; * @param unit the time unit for the {@code keepAliveTime} argument&#10; * @param workQueue the queue to use for holding tasks before they are&#10; *        executed.  This queue will hold only the {@code Runnable}&#10; *        tasks submitted by the {@code execute} method.&#10; * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;&#10; *         {@code corePoolSize &lt; 0}&lt;br&gt;&#10; *         {@code keepAliveTime &lt; 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt; corePoolSize}&#10; * @throws NullPointerException if {@code workQueue} is null&#10; */&#10;public ThreadPoolExecutor(int corePoolSize,&#10;                          int maximumPoolSize,&#10;                          long keepAliveTime,&#10;                          TimeUnit unit,&#10;                          BlockingQueue&lt;Runnable&gt; workQueue) {&#10;    this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,&#10;         Executors.defaultThreadFactory(), defaultHandler);&#10;}&#10;```" />
                      <option name="nodes">
                        <list>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="修复报错:" />
                            <option name="contentId" value="-1873152921" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead." />
                            <option name="contentId" value="-1459445322" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:473) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="344682698" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:532) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1983222879" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="28372401" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1609629593" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-2088993819" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-177780704" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1807396757" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:655) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]" />
                            <option name="contentId" value="-92758379" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1374266255" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]" />
                            <option name="contentId" value="1518278516" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-843351768" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1251620084" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="773431075" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-694181642" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-783883240" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1849991991" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1530002254" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-806782057" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1396238001" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="496073733" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1415413550" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1927893045" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1854694179" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-243579608" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1819898709" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="2072869522" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="2003645914" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1848957684" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-638419225" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1468224951" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1295572189" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1848957684" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1959220427" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1941524296" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-652343123" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1068571395" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="773431075" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1711511609" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1848957684" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="773431075" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1981616586" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1848957684" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="773431075" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="2062793747" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1848957684" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="773431075" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-404239114" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1384116209" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-2026819338" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="551945192" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-647235346" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-104009234" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1759162831" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1121389080" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1567414878" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1534589683" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="538842303" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-518464954" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="952287887" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-904453911" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1169847749" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]" />
                            <option name="contentId" value="1733049135" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="代码上下文:" />
                            <option name="contentId" value="1561974546" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="/**&#10; * Creates a new {@code ThreadPoolExecutor} with the given initial&#10; * parameters and default thread factory and rejected execution handler.&#10; * It may be more convenient to use one of the {@link Executors} factory&#10; * methods instead of this general purpose constructor.&#10; *&#10; * @param corePoolSize the number of threads to keep in the pool, even&#10; *        if they are idle, unless {@code allowCoreThreadTimeOut} is set&#10; * @param maximumPoolSize the maximum number of threads to allow in the&#10; *        pool&#10; * @param keepAliveTime when the number of threads is greater than&#10; *        the core, this is the maximum time that excess idle threads&#10; *        will wait for new tasks before terminating.&#10; * @param unit the time unit for the {@code keepAliveTime} argument&#10; * @param workQueue the queue to use for holding tasks before they are&#10; *        executed.  This queue will hold only the {@code Runnable}&#10; *        tasks submitted by the {@code execute} method.&#10; * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;&#10; *         {@code corePoolSize &lt; 0}&lt;br&gt;&#10; *         {@code keepAliveTime &lt; 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt; corePoolSize}&#10; * @throws NullPointerException if {@code workQueue} is null&#10; */&#10;public ThreadPoolExecutor(int corePoolSize,&#10;                          int maximumPoolSize,&#10;                          long keepAliveTime,&#10;                          TimeUnit unit,&#10;                          BlockingQueue&lt;Runnable&gt; workQueue) {&#10;    this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,&#10;         Executors.defaultThreadFactory(), defaultHandler);&#10;}&#10;" />
                            <option name="contentId" value="1963650114" />
                            <option name="expectEnding" value="```" />
                            <option name="language" value="java" />
                            <option name="settled" value="false" />
                            <option name="type" value="code-block" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                        </list>
                      </option>
                      <option name="parserState">
                        <ParserState>
                          <option name="line" value="114" />
                          <option name="column" value="2" />
                          <option name="offset" value="12646" />
                          <option name="closing" value="true" />
                          <option name="innerBlock" value="1" />
                          <option name="moveCursor" value="true" />
                        </ParserState>
                      </option>
                    </SimpleMarkdownStreamParser>
                  </option>
                  <option name="range">
                    <CodeActionChatRequestRange>
                      <option name="start">
                        <CodeActionChatRequestRangePosition />
                      </option>
                      <option name="end">
                        <CodeActionChatRequestRangePosition>
                          <option name="character" value="10000" />
                        </CodeActionChatRequestRangePosition>
                      </option>
                    </CodeActionChatRequestRange>
                  </option>
                  <option name="role" value="user" />
                  <option name="selectedRanges">
                    <list />
                  </option>
                  <option name="uri" value="" />
                  <option name="variables">
                    <list />
                  </option>
                </UIChatMessage>
                <UIChatMessage>
                  <option name="actions">
                    <list />
                  </option>
                  <option name="changeToOptimize" value="true" />
                  <option name="codebaseReferences">
                    <list />
                  </option>
                  <option name="codebaseStatus" value="init" />
                  <option name="command" value="fix" />
                  <option name="content" value="这个错误是因为当 `allowCredentials(true)` 时，不能使用通配符 `*` 作为 `allowedOrigins` 的值。你需要明确列出所有允许的源，或者使用 `allowedOriginPatterns`。&#10;&#10;修改后的代码如下：&#10;&#10;```java&#10;package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                        .allowedOrigins(&#10;                            &quot;http://localhost:3000&quot;,&#10;                            &quot;http://127.0.0.1:3000&quot;,&#10;                            &quot;http://localhost:8080&quot;,&#10;                            &quot;http://127.0.0.1:8080&quot;&#10;                        )&#10;                        .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                        .allowedHeaders(&quot;*&quot;)&#10;                        .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;```&#10;&#10;实际上你的代码已经是正确的，因为已经明确列出了所有允许的源，没有使用 `*`。错误可能是由于其他配置或依赖版本问题导致的。请检查：&#10;&#10;1. 确保没有其他地方设置了全局的 CORS 配置&#10;2. 检查 Spring Boot 或 Spring Web 的版本是否兼容&#10;3. 确保没有其他配置覆盖了这个 CORS 配置&#10;&#10;如果问题仍然存在，可以尝试使用 `allowedOriginPatterns` 替代 `allowedOrigins`（Spring 5.3+ 支持）：&#10;&#10;```java&#10;registry.addMapping(&quot;/**&quot;)&#10;        .allowedOriginPatterns(&quot;*&quot;)  // 注意：这实际上又回到了通配符，可能不适用于需要凭证的情况&#10;        .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;        .allowedHeaders(&quot;*&quot;)&#10;        .allowCredentials(true);&#10;```&#10;&#10;但更推荐保持你原来的代码，并检查是否有其他配置冲突。" />
                  <option name="cost" value="12678" />
                  <option name="createdAt" value="1747818598606" />
                  <option name="followup">
                    <list />
                  </option>
                  <option name="id" value="0196f21b1f007bb3b4b773d053f49fee" />
                  <option name="knowledgeReferences">
                    <list />
                  </option>
                  <option name="localReferences">
                    <list>
                      <LocalReferences>
                        <option name="isRequestStage" value="true" />
                        <option name="range">
                          <RefRange />
                        </option>
                        <option name="uri" value="{&quot;path&quot;:&quot;file:///C:/Users/10078/Desktop/bookkeeping/bookkeeping_server/src/main/java/com/bookkeeping/config/CorsConfig.java&quot;}" />
                      </LocalReferences>
                    </list>
                  </option>
                  <option name="parser">
                    <SimpleMarkdownStreamParser>
                      <option name="columns">
                        <list>
                          <option value="113" />
                          <option value="-1" />
                          <option value="8" />
                          <option value="-1" />
                          <option value="6" />
                          <option value="30" />
                          <option value="-1" />
                          <option value="50" />
                          <option value="59" />
                          <option value="69" />
                          <option value="73" />
                          <option value="-1" />
                          <option value="13" />
                          <option value="24" />
                          <option value="8" />
                          <option value="45" />
                          <option value="38" />
                          <option value="20" />
                          <option value="63" />
                          <option value="41" />
                          <option value="39" />
                          <option value="51" />
                          <option value="51" />
                          <option value="51" />
                          <option value="50" />
                          <option value="24" />
                          <option value="81" />
                          <option value="43" />
                          <option value="47" />
                          <option value="12" />
                          <option value="9" />
                          <option value="4" />
                          <option value="0" />
                          <option value="2" />
                          <option value="-1" />
                          <option value="64" />
                          <option value="-1" />
                          <option value="24" />
                          <option value="37" />
                          <option value="23" />
                          <option value="-1" />
                          <option value="75" />
                          <option value="-1" />
                          <option value="6" />
                          <option value="25" />
                          <option value="67" />
                          <option value="65" />
                          <option value="27" />
                          <option value="31" />
                          <option value="2" />
                          <option value="-1" />
                          <option value="25" />
                        </list>
                      </option>
                      <option name="content" value="这个错误是因为当 `allowCredentials(true)` 时，不能使用通配符 `*` 作为 `allowedOrigins` 的值。你需要明确列出所有允许的源，或者使用 `allowedOriginPatterns`。&#10;&#10;修改后的代码如下：&#10;&#10;```java&#10;package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                        .allowedOrigins(&#10;                            &quot;http://localhost:3000&quot;,&#10;                            &quot;http://127.0.0.1:3000&quot;,&#10;                            &quot;http://localhost:8080&quot;,&#10;                            &quot;http://127.0.0.1:8080&quot;&#10;                        )&#10;                        .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                        .allowedHeaders(&quot;*&quot;)&#10;                        .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;```&#10;&#10;实际上你的代码已经是正确的，因为已经明确列出了所有允许的源，没有使用 `*`。错误可能是由于其他配置或依赖版本问题导致的。请检查：&#10;&#10;1. 确保没有其他地方设置了全局的 CORS 配置&#10;2. 检查 Spring Boot 或 Spring Web 的版本是否兼容&#10;3. 确保没有其他配置覆盖了这个 CORS 配置&#10;&#10;如果问题仍然存在，可以尝试使用 `allowedOriginPatterns` 替代 `allowedOrigins`（Spring 5.3+ 支持）：&#10;&#10;```java&#10;registry.addMapping(&quot;/**&quot;)&#10;        .allowedOriginPatterns(&quot;*&quot;)  // 注意：这实际上又回到了通配符，可能不适用于需要凭证的情况&#10;        .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;        .allowedHeaders(&quot;*&quot;)&#10;        .allowCredentials(true);&#10;```&#10;&#10;但更推荐保持你原来的代码，并检查是否有其他配置冲突。&#10;" />
                      <option name="nodes">
                        <list>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="这个错误是因为当 `allowCredentials(true)` 时，不能使用通配符 `*` 作为 `allowedOrigins` 的值。你需要明确列出所有允许的源，或者使用 `allowedOriginPatterns`。" />
                            <option name="contentId" value="291234933" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="修改后的代码如下：" />
                            <option name="contentId" value="711499090" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                        .allowedOrigins(&#10;                            &quot;http://localhost:3000&quot;,&#10;                            &quot;http://127.0.0.1:3000&quot;,&#10;                            &quot;http://localhost:8080&quot;,&#10;                            &quot;http://127.0.0.1:8080&quot;&#10;                        )&#10;                        .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                        .allowedHeaders(&quot;*&quot;)&#10;                        .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;" />
                            <option name="contentId" value="-1418676416" />
                            <option name="expectEnding" value="```" />
                            <option name="indentSize" value="0" />
                            <option name="language" value="java" />
                            <option name="settled" value="true" />
                            <option name="type" value="code-block" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="实际上你的代码已经是正确的，因为已经明确列出了所有允许的源，没有使用 `*`。错误可能是由于其他配置或依赖版本问题导致的。请检查：" />
                            <option name="contentId" value="-1909289297" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="1. 确保没有其他地方设置了全局的 CORS 配置" />
                            <option name="contentId" value="-611803571" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="2. 检查 Spring Boot 或 Spring Web 的版本是否兼容" />
                            <option name="contentId" value="-1357362951" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="3. 确保没有其他配置覆盖了这个 CORS 配置" />
                            <option name="contentId" value="269922046" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="如果问题仍然存在，可以尝试使用 `allowedOriginPatterns` 替代 `allowedOrigins`（Spring 5.3+ 支持）：" />
                            <option name="contentId" value="305199899" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="registry.addMapping(&quot;/**&quot;)&#10;        .allowedOriginPatterns(&quot;*&quot;)  // 注意：这实际上又回到了通配符，可能不适用于需要凭证的情况&#10;        .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;        .allowedHeaders(&quot;*&quot;)&#10;        .allowCredentials(true);&#10;" />
                            <option name="contentId" value="1442456129" />
                            <option name="expectEnding" value="```" />
                            <option name="indentSize" value="0" />
                            <option name="language" value="java" />
                            <option name="settled" value="true" />
                            <option name="type" value="code-block" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="但更推荐保持你原来的代码，并检查是否有其他配置冲突。" />
                            <option name="contentId" value="231499493" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="false" />
                            <option name="type" value="undetermined" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                        </list>
                      </option>
                      <option name="parserState">
                        <ParserState>
                          <option name="line" value="52" />
                          <option name="column" value="-1" />
                          <option name="offset" value="1690" />
                          <option name="moveCursor" value="true" />
                        </ParserState>
                      </option>
                    </SimpleMarkdownStreamParser>
                  </option>
                  <option name="references">
                    <list />
                  </option>
                  <option name="role" value="assistant" />
                  <option name="topic" value="workspace" />
                </UIChatMessage>
                <UIChatMessage>
                  <option name="changeToOptimize" value="true" />
                  <option name="command" value="fix" />
                  <option name="content" value="修复报错:&#10;org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:711) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:385) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:313) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:390) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:249) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:344) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]&#10;Caused by: java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:473) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:532) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;... 68 common frames omitted&#10;代码上下文:&#10;```java&#10;/**&#10; * Creates a new {@code ThreadPoolExecutor} with the given initial&#10; * parameters and default thread factory and rejected execution handler.&#10; * It may be more convenient to use one of the {@link Executors} factory&#10; * methods instead of this general purpose constructor.&#10; *&#10; * @param corePoolSize the number of threads to keep in the pool, even&#10; *        if they are idle, unless {@code allowCoreThreadTimeOut} is set&#10; * @param maximumPoolSize the maximum number of threads to allow in the&#10; *        pool&#10; * @param keepAliveTime when the number of threads is greater than&#10; *        the core, this is the maximum time that excess idle threads&#10; *        will wait for new tasks before terminating.&#10; * @param unit the time unit for the {@code keepAliveTime} argument&#10; * @param workQueue the queue to use for holding tasks before they are&#10; *        executed.  This queue will hold only the {@code Runnable}&#10; *        tasks submitted by the {@code execute} method.&#10; * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;&#10; *         {@code corePoolSize &lt; 0}&lt;br&gt;&#10; *         {@code keepAliveTime &lt; 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt; corePoolSize}&#10; * @throws NullPointerException if {@code workQueue} is null&#10; */&#10;public ThreadPoolExecutor(int corePoolSize,&#10;                          int maximumPoolSize,&#10;                          long keepAliveTime,&#10;                          TimeUnit unit,&#10;                          BlockingQueue&lt;Runnable&gt; workQueue) {&#10;    this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,&#10;         Executors.defaultThreadFactory(), defaultHandler);&#10;}&#10;```" />
                  <option name="cost" value="0" />
                  <option name="createdAt" value="1747819420693" />
                  <option name="localReferences">
                    <list>
                      <LocalReferences>
                        <option name="isRequestStage" value="true" />
                        <option name="range">
                          <RefRange />
                        </option>
                        <option name="uri" value="{&quot;path&quot;:&quot;file:///C:/Users/10078/Desktop/bookkeeping/bookkeeping_server/src/main/java/com/bookkeeping/config/CorsConfig.java&quot;}" />
                      </LocalReferences>
                    </list>
                  </option>
                  <option name="parser">
                    <SimpleMarkdownStreamParser>
                      <option name="columns">
                        <list>
                          <option value="4" />
                          <option value="410" />
                          <option value="127" />
                          <option value="118" />
                          <option value="102" />
                          <option value="119" />
                          <option value="102" />
                          <option value="139" />
                          <option value="131" />
                          <option value="146" />
                          <option value="160" />
                          <option value="161" />
                          <option value="146" />
                          <option value="154" />
                          <option value="154" />
                          <option value="146" />
                          <option value="148" />
                          <option value="148" />
                          <option value="146" />
                          <option value="168" />
                          <option value="146" />
                          <option value="184" />
                          <option value="146" />
                          <option value="153" />
                          <option value="146" />
                          <option value="141" />
                          <option value="140" />
                          <option value="146" />
                          <option value="124" />
                          <option value="146" />
                          <option value="167" />
                          <option value="166" />
                          <option value="146" />
                          <option value="124" />
                          <option value="146" />
                          <option value="135" />
                          <option value="127" />
                          <option value="132" />
                          <option value="126" />
                          <option value="139" />
                          <option value="131" />
                          <option value="132" />
                          <option value="124" />
                          <option value="139" />
                          <option value="131" />
                          <option value="124" />
                          <option value="139" />
                          <option value="131" />
                          <option value="124" />
                          <option value="139" />
                          <option value="131" />
                          <option value="127" />
                          <option value="135" />
                          <option value="130" />
                          <option value="128" />
                          <option value="118" />
                          <option value="118" />
                          <option value="121" />
                          <option value="118" />
                          <option value="117" />
                          <option value="121" />
                          <option value="116" />
                          <option value="115" />
                          <option value="121" />
                          <option value="128" />
                          <option value="124" />
                          <option value="120" />
                          <option value="130" />
                          <option value="130" />
                          <option value="123" />
                          <option value="55" />
                          <option value="321" />
                          <option value="132" />
                          <option value="142" />
                          <option value="125" />
                          <option value="125" />
                          <option value="123" />
                          <option value="127" />
                          <option value="28" />
                          <option value="5" />
                          <option value="6" />
                          <option value="2" />
                          <option value="65" />
                          <option value="71" />
                          <option value="71" />
                          <option value="54" />
                          <option value="1" />
                          <option value="69" />
                          <option value="71" />
                          <option value="70" />
                          <option value="13" />
                          <option value="65" />
                          <option value="68" />
                          <option value="52" />
                          <option value="66" />
                          <option value="69" />
                          <option value="66" />
                          <option value="55" />
                          <option value="69" />
                          <option value="38" />
                          <option value="39" />
                          <option value="42" />
                          <option value="48" />
                          <option value="59" />
                          <option value="2" />
                          <option value="42" />
                          <option value="45" />
                          <option value="44" />
                          <option value="39" />
                          <option value="61" />
                          <option value="70" />
                          <option value="58" />
                          <option value="0" />
                        </list>
                      </option>
                      <option name="content" value="修复报错:&#10;org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:711) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:385) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:313) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:390) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:249) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:344) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]&#10;Caused by: java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:473) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:532) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;... 68 common frames omitted&#10;代码上下文:&#10;```java&#10;/**&#10; * Creates a new {@code ThreadPoolExecutor} with the given initial&#10; * parameters and default thread factory and rejected execution handler.&#10; * It may be more convenient to use one of the {@link Executors} factory&#10; * methods instead of this general purpose constructor.&#10; *&#10; * @param corePoolSize the number of threads to keep in the pool, even&#10; *        if they are idle, unless {@code allowCoreThreadTimeOut} is set&#10; * @param maximumPoolSize the maximum number of threads to allow in the&#10; *        pool&#10; * @param keepAliveTime when the number of threads is greater than&#10; *        the core, this is the maximum time that excess idle threads&#10; *        will wait for new tasks before terminating.&#10; * @param unit the time unit for the {@code keepAliveTime} argument&#10; * @param workQueue the queue to use for holding tasks before they are&#10; *        executed.  This queue will hold only the {@code Runnable}&#10; *        tasks submitted by the {@code execute} method.&#10; * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;&#10; *         {@code corePoolSize &lt; 0}&lt;br&gt;&#10; *         {@code keepAliveTime &lt; 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt; corePoolSize}&#10; * @throws NullPointerException if {@code workQueue} is null&#10; */&#10;public ThreadPoolExecutor(int corePoolSize,&#10;                          int maximumPoolSize,&#10;                          long keepAliveTime,&#10;                          TimeUnit unit,&#10;                          BlockingQueue&lt;Runnable&gt; workQueue) {&#10;    this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,&#10;         Executors.defaultThreadFactory(), defaultHandler);&#10;}&#10;```" />
                      <option name="nodes">
                        <list>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="修复报错:" />
                            <option name="contentId" value="-1873152921" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead." />
                            <option name="contentId" value="811556174" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1678442243" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1773789336" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]" />
                            <option name="contentId" value="-567832082" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1374266255" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]" />
                            <option name="contentId" value="1518278516" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-843351768" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-694181642" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1451350522" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1849991991" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1530002254" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-806782057" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1767013899" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="496073733" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1415413550" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1927893045" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1854694179" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-243579608" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1819898709" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1086611527" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-638419225" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="-1468224951" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1086611527" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1365551892" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1959220427" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.5.2.jar:5.5.2]" />
                            <option name="contentId" value="1941524296" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-652343123" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1068571395" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="773431075" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1711511609" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1848957684" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="773431075" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1086611527" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="773431075" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1086611527" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="773431075" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1655196159" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:711) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1652079702" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1700758790" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:385) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-2135715945" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:313) ~[tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-134049391" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:390) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1275584650" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:249) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1469780866" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:344) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-469802162" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="591284327" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-647235346" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-104009234" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1759162831" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1121389080" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1567414878" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="1534589683" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="538842303" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-518464954" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="952287887" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-904453911" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.52.jar:9.0.52]" />
                            <option name="contentId" value="-1169847749" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]" />
                            <option name="contentId" value="1733049135" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="Caused by: java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead." />
                            <option name="contentId" value="-170523148" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:473) ~[spring-web-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="344682698" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:532) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1983222879" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="28372401" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="1609629593" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-2088993819" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-177780704" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;... 68 common frames omitted" />
                            <option name="contentId" value="-188826526" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="代码上下文:" />
                            <option name="contentId" value="1561974546" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="/**&#10; * Creates a new {@code ThreadPoolExecutor} with the given initial&#10; * parameters and default thread factory and rejected execution handler.&#10; * It may be more convenient to use one of the {@link Executors} factory&#10; * methods instead of this general purpose constructor.&#10; *&#10; * @param corePoolSize the number of threads to keep in the pool, even&#10; *        if they are idle, unless {@code allowCoreThreadTimeOut} is set&#10; * @param maximumPoolSize the maximum number of threads to allow in the&#10; *        pool&#10; * @param keepAliveTime when the number of threads is greater than&#10; *        the core, this is the maximum time that excess idle threads&#10; *        will wait for new tasks before terminating.&#10; * @param unit the time unit for the {@code keepAliveTime} argument&#10; * @param workQueue the queue to use for holding tasks before they are&#10; *        executed.  This queue will hold only the {@code Runnable}&#10; *        tasks submitted by the {@code execute} method.&#10; * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;&#10; *         {@code corePoolSize &lt; 0}&lt;br&gt;&#10; *         {@code keepAliveTime &lt; 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt; corePoolSize}&#10; * @throws NullPointerException if {@code workQueue} is null&#10; */&#10;public ThreadPoolExecutor(int corePoolSize,&#10;                          int maximumPoolSize,&#10;                          long keepAliveTime,&#10;                          TimeUnit unit,&#10;                          BlockingQueue&lt;Runnable&gt; workQueue) {&#10;    this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,&#10;         Executors.defaultThreadFactory(), defaultHandler);&#10;}&#10;" />
                            <option name="contentId" value="1963650114" />
                            <option name="expectEnding" value="```" />
                            <option name="language" value="java" />
                            <option name="settled" value="false" />
                            <option name="type" value="code-block" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                        </list>
                      </option>
                      <option name="parserState">
                        <ParserState>
                          <option name="line" value="113" />
                          <option name="column" value="2" />
                          <option name="offset" value="12596" />
                          <option name="closing" value="true" />
                          <option name="innerBlock" value="1" />
                          <option name="moveCursor" value="true" />
                        </ParserState>
                      </option>
                    </SimpleMarkdownStreamParser>
                  </option>
                  <option name="range">
                    <CodeActionChatRequestRange>
                      <option name="start">
                        <CodeActionChatRequestRangePosition />
                      </option>
                      <option name="end">
                        <CodeActionChatRequestRangePosition>
                          <option name="character" value="10000" />
                        </CodeActionChatRequestRangePosition>
                      </option>
                    </CodeActionChatRequestRange>
                  </option>
                  <option name="role" value="user" />
                  <option name="selectedRanges">
                    <list />
                  </option>
                  <option name="uri" value="" />
                  <option name="variables">
                    <list />
                  </option>
                </UIChatMessage>
                <UIChatMessage>
                  <option name="actions">
                    <list />
                  </option>
                  <option name="changeToOptimize" value="true" />
                  <option name="codebaseReferences">
                    <list />
                  </option>
                  <option name="codebaseStatus" value="init" />
                  <option name="command" value="fix" />
                  <option name="content" value="根据错误信息，`allowCredentials(true)` 和 `allowedOrigins(&quot;*&quot;)` 不能同时使用，因为当允许凭证时，`allowedOrigins` 不能使用通配符 `*`。&#10;&#10;### 修复方法：&#10;将 `allowedOrigins(&quot;*&quot;)` 替换为具体的允许的源，或者使用 `allowedOriginPatterns`（Spring 5.3+ 支持）。&#10;&#10;#### 修改后的代码：&#10;```java&#10;package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                         .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                         // 替换为具体的允许的源，例如：&#10;                         .allowedOrigins(&quot;http://example.com&quot;, &quot;http://localhost:8080&quot;) // 修改为你的实际前端地址&#10;                         .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;```&#10;&#10;或者使用 `allowedOriginPatterns`（如果使用 Spring 5.3+）：&#10;```java&#10;package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                         .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                         // 使用 allowedOriginPatterns 允许通配符（Spring 5.3+）&#10;                         .allowedOriginPatterns(&quot;*&quot;) // 允许所有源（慎用，生产环境建议明确指定）&#10;                         .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;```&#10;&#10;### 推荐：&#10;- 如果是生产环境，建议明确指定允许的源（如 `allowedOrigins(&quot;http://your-frontend-domain.com&quot;)`）。&#10;- 如果是开发环境，可以使用 `allowedOriginPatterns(&quot;*&quot;)`（但要注意安全性）。" />
                  <option name="cost" value="13906" />
                  <option name="createdAt" value="1747819434647" />
                  <option name="followup">
                    <list />
                  </option>
                  <option name="id" value="0196f227dc147bb3b4b77c6f46398ef4" />
                  <option name="knowledgeReferences">
                    <list />
                  </option>
                  <option name="localReferences">
                    <list>
                      <LocalReferences>
                        <option name="isRequestStage" value="true" />
                        <option name="range">
                          <RefRange />
                        </option>
                        <option name="uri" value="{&quot;path&quot;:&quot;file:///C:/Users/10078/Desktop/bookkeeping/bookkeeping_server/src/main/java/com/bookkeeping/config/CorsConfig.java&quot;}" />
                      </LocalReferences>
                    </list>
                  </option>
                  <option name="parser">
                    <SimpleMarkdownStreamParser>
                      <option name="columns">
                        <list>
                          <option value="100" />
                          <option value="-1" />
                          <option value="8" />
                          <option value="79" />
                          <option value="-1" />
                          <option value="11" />
                          <option value="6" />
                          <option value="30" />
                          <option value="-1" />
                          <option value="50" />
                          <option value="59" />
                          <option value="69" />
                          <option value="73" />
                          <option value="-1" />
                          <option value="13" />
                          <option value="24" />
                          <option value="8" />
                          <option value="45" />
                          <option value="38" />
                          <option value="20" />
                          <option value="63" />
                          <option value="41" />
                          <option value="82" />
                          <option value="41" />
                          <option value="101" />
                          <option value="48" />
                          <option value="12" />
                          <option value="9" />
                          <option value="4" />
                          <option value="0" />
                          <option value="2" />
                          <option value="-1" />
                          <option value="46" />
                          <option value="6" />
                          <option value="30" />
                          <option value="-1" />
                          <option value="50" />
                          <option value="59" />
                          <option value="69" />
                          <option value="73" />
                          <option value="-1" />
                          <option value="13" />
                          <option value="24" />
                          <option value="8" />
                          <option value="45" />
                          <option value="38" />
                          <option value="20" />
                          <option value="63" />
                          <option value="41" />
                          <option value="82" />
                          <option value="70" />
                          <option value="75" />
                          <option value="48" />
                          <option value="12" />
                          <option value="9" />
                          <option value="4" />
                          <option value="0" />
                          <option value="2" />
                          <option value="-1" />
                          <option value="6" />
                          <option value="75" />
                          <option value="52" />
                        </list>
                      </option>
                      <option name="content" value="根据错误信息，`allowCredentials(true)` 和 `allowedOrigins(&quot;*&quot;)` 不能同时使用，因为当允许凭证时，`allowedOrigins` 不能使用通配符 `*`。&#10;&#10;### 修复方法：&#10;将 `allowedOrigins(&quot;*&quot;)` 替换为具体的允许的源，或者使用 `allowedOriginPatterns`（Spring 5.3+ 支持）。&#10;&#10;#### 修改后的代码：&#10;```java&#10;package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                         .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                         // 替换为具体的允许的源，例如：&#10;                         .allowedOrigins(&quot;http://example.com&quot;, &quot;http://localhost:8080&quot;) // 修改为你的实际前端地址&#10;                         .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;```&#10;&#10;或者使用 `allowedOriginPatterns`（如果使用 Spring 5.3+）：&#10;```java&#10;package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                         .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                         // 使用 allowedOriginPatterns 允许通配符（Spring 5.3+）&#10;                         .allowedOriginPatterns(&quot;*&quot;) // 允许所有源（慎用，生产环境建议明确指定）&#10;                         .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;```&#10;&#10;### 推荐：&#10;- 如果是生产环境，建议明确指定允许的源（如 `allowedOrigins(&quot;http://your-frontend-domain.com&quot;)`）。&#10;- 如果是开发环境，可以使用 `allowedOriginPatterns(&quot;*&quot;)`（但要注意安全性）。&#10;" />
                      <option name="nodes">
                        <list>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="根据错误信息，`allowCredentials(true)` 和 `allowedOrigins(&quot;*&quot;)` 不能同时使用，因为当允许凭证时，`allowedOrigins` 不能使用通配符 `*`。" />
                            <option name="contentId" value="-1141836787" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value=" 修复方法：" />
                            <option name="contentId" value="-956517121" />
                            <option name="level" value="3" />
                            <option name="settled" value="true" />
                            <option name="type" value="heading" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="将 `allowedOrigins(&quot;*&quot;)` 替换为具体的允许的源，或者使用 `allowedOriginPatterns`（Spring 5.3+ 支持）。" />
                            <option name="contentId" value="-1190065028" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value=" 修改后的代码：" />
                            <option name="contentId" value="-926430949" />
                            <option name="level" value="4" />
                            <option name="settled" value="true" />
                            <option name="type" value="heading" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                         .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                         // 替换为具体的允许的源，例如：&#10;                         .allowedOrigins(&quot;http://example.com&quot;, &quot;http://localhost:8080&quot;) // 修改为你的实际前端地址&#10;                         .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;" />
                            <option name="contentId" value="308468170" />
                            <option name="expectEnding" value="```" />
                            <option name="indentSize" value="0" />
                            <option name="language" value="java" />
                            <option name="settled" value="true" />
                            <option name="type" value="code-block" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="或者使用 `allowedOriginPatterns`（如果使用 Spring 5.3+）：" />
                            <option name="contentId" value="-1113023143" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                         .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                         // 使用 allowedOriginPatterns 允许通配符（Spring 5.3+）&#10;                         .allowedOriginPatterns(&quot;*&quot;) // 允许所有源（慎用，生产环境建议明确指定）&#10;                         .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;" />
                            <option name="contentId" value="-771331008" />
                            <option name="expectEnding" value="```" />
                            <option name="indentSize" value="0" />
                            <option name="language" value="java" />
                            <option name="settled" value="true" />
                            <option name="type" value="code-block" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value=" 推荐：" />
                            <option name="contentId" value="26577746" />
                            <option name="level" value="3" />
                            <option name="settled" value="true" />
                            <option name="type" value="heading" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value=" 如果是生产环境，建议明确指定允许的源（如 `allowedOrigins(&quot;http://your-frontend-domain.com&quot;)`）。" />
                            <option name="contentId" value="1649657510" />
                            <option name="indentSize" value="0" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value=" 如果是开发环境，可以使用 `allowedOriginPatterns(&quot;*&quot;)`（但要注意安全性）。" />
                            <option name="contentId" value="-842900896" />
                            <option name="indentSize" value="0" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="false" />
                            <option name="type" value="undetermined" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                        </list>
                      </option>
                      <option name="parserState">
                        <ParserState>
                          <option name="line" value="62" />
                          <option name="column" value="-1" />
                          <option name="offset" value="2172" />
                          <option name="moveCursor" value="true" />
                        </ParserState>
                      </option>
                    </SimpleMarkdownStreamParser>
                  </option>
                  <option name="references">
                    <list />
                  </option>
                  <option name="role" value="assistant" />
                  <option name="topic" value="workspace" />
                </UIChatMessage>
                <UIChatMessage>
                  <option name="changeToOptimize" value="true" />
                  <option name="command" value="fix" />
                  <option name="content" value="修复报错:&#10;org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store 'classpath:keystore.p12'&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:163) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at com.bookkeeping.BookkeepingApplication.main(BookkeepingApplication.java:9) [classes/:na]&#10;Caused by: org.springframework.boot.web.server.WebServerException: Could not load key store 'classpath:keystore.p12'&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:132) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSsl(SslConnectorCustomizer.java:92) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.customize(SslConnectorCustomizer.java:57) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(TomcatServletWebServerFactory.java:351) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(TomcatServletWebServerFactory.java:329) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:182) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:160) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;... 8 common frames omitted&#10;Caused by: java.io.FileNotFoundException: class path resource [keystore.p12] cannot be resolved to URL because it does not exist&#10;&#9;at org.springframework.util.ResourceUtils.getURL(ResourceUtils.java:137) ~[spring-core-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:129) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;... 15 common frames omitted&#10;代码上下文:&#10;```java&#10;public static void main(String[] args) {&#10;    SpringApplication.run(BookkeepingApplication.class, args);&#10;}&#10;```" />
                  <option name="cost" value="0" />
                  <option name="createdAt" value="1747989116311" />
                  <option name="localReferences">
                    <list>
                      <LocalReferences>
                        <option name="isRequestStage" value="true" />
                        <option name="range">
                          <RefRange />
                        </option>
                        <option name="uri" value="{&quot;path&quot;:&quot;file:///C:/Users/10078/Desktop/bookkeeping/bookkeeping_server/src/main/java/com/bookkeeping/BookkeepingApplication.java&quot;}" />
                      </LocalReferences>
                    </list>
                  </option>
                  <option name="parser">
                    <SimpleMarkdownStreamParser>
                      <option name="columns">
                        <list>
                          <option value="4" />
                          <option value="209" />
                          <option value="168" />
                          <option value="144" />
                          <option value="166" />
                          <option value="111" />
                          <option value="118" />
                          <option value="107" />
                          <option value="108" />
                          <option value="108" />
                          <option value="91" />
                          <option value="115" />
                          <option value="155" />
                          <option value="146" />
                          <option value="143" />
                          <option value="161" />
                          <option value="167" />
                          <option value="161" />
                          <option value="174" />
                          <option value="168" />
                          <option value="27" />
                          <option value="127" />
                          <option value="103" />
                          <option value="155" />
                          <option value="28" />
                          <option value="5" />
                          <option value="6" />
                          <option value="39" />
                          <option value="61" />
                          <option value="0" />
                        </list>
                      </option>
                      <option name="content" value="修复报错:&#10;org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store 'classpath:keystore.p12'&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:163) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at com.bookkeeping.BookkeepingApplication.main(BookkeepingApplication.java:9) [classes/:na]&#10;Caused by: org.springframework.boot.web.server.WebServerException: Could not load key store 'classpath:keystore.p12'&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:132) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSsl(SslConnectorCustomizer.java:92) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.customize(SslConnectorCustomizer.java:57) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(TomcatServletWebServerFactory.java:351) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(TomcatServletWebServerFactory.java:329) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:182) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:160) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;... 8 common frames omitted&#10;Caused by: java.io.FileNotFoundException: class path resource [keystore.p12] cannot be resolved to URL because it does not exist&#10;&#9;at org.springframework.util.ResourceUtils.getURL(ResourceUtils.java:137) ~[spring-core-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:129) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;... 15 common frames omitted&#10;代码上下文:&#10;```java&#10;public static void main(String[] args) {&#10;    SpringApplication.run(BookkeepingApplication.class, args);&#10;}&#10;```" />
                      <option name="nodes">
                        <list>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="修复报错:" />
                            <option name="contentId" value="-1873152921" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store 'classpath:keystore.p12'" />
                            <option name="contentId" value="99835004" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:163) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="-374520648" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-1661515983" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="233265755" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="844649209" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="-826141045" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="-1597765721" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="-865900266" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="-967086794" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at com.bookkeeping.BookkeepingApplication.main(BookkeepingApplication.java:9) [classes/:na]" />
                            <option name="contentId" value="861471186" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="Caused by: org.springframework.boot.web.server.WebServerException: Could not load key store 'classpath:keystore.p12'" />
                            <option name="contentId" value="-2142112592" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:132) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="-1221319746" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSsl(SslConnectorCustomizer.java:92) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="55175011" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.customize(SslConnectorCustomizer.java:57) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="-1560926967" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(TomcatServletWebServerFactory.java:351) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="472459840" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(TomcatServletWebServerFactory.java:329) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="171621002" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="1103966722" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:182) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="435298324" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:160) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="1881542837" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;... 8 common frames omitted" />
                            <option name="contentId" value="1161531906" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="Caused by: java.io.FileNotFoundException: class path resource [keystore.p12] cannot be resolved to URL because it does not exist" />
                            <option name="contentId" value="-752309576" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.util.ResourceUtils.getURL(ResourceUtils.java:137) ~[spring-core-5.3.9.jar:5.3.9]" />
                            <option name="contentId" value="-371054771" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:129) ~[spring-boot-2.5.4.jar:2.5.4]" />
                            <option name="contentId" value="-352681050" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="&#9;... 15 common frames omitted" />
                            <option name="contentId" value="706881092" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="代码上下文:" />
                            <option name="contentId" value="1561974546" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="public static void main(String[] args) {&#10;    SpringApplication.run(BookkeepingApplication.class, args);&#10;}&#10;" />
                            <option name="contentId" value="381000372" />
                            <option name="expectEnding" value="```" />
                            <option name="language" value="java" />
                            <option name="settled" value="false" />
                            <option name="type" value="code-block" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                        </list>
                      </option>
                      <option name="parserState">
                        <ParserState>
                          <option name="line" value="30" />
                          <option name="column" value="2" />
                          <option name="offset" value="3338" />
                          <option name="closing" value="true" />
                          <option name="innerBlock" value="1" />
                          <option name="moveCursor" value="true" />
                        </ParserState>
                      </option>
                    </SimpleMarkdownStreamParser>
                  </option>
                  <option name="range">
                    <CodeActionChatRequestRange>
                      <option name="start">
                        <CodeActionChatRequestRangePosition />
                      </option>
                      <option name="end">
                        <CodeActionChatRequestRangePosition>
                          <option name="character" value="10000" />
                        </CodeActionChatRequestRangePosition>
                      </option>
                    </CodeActionChatRequestRange>
                  </option>
                  <option name="role" value="user" />
                  <option name="selectedRanges">
                    <list />
                  </option>
                  <option name="uri" value="" />
                  <option name="variables">
                    <list />
                  </option>
                </UIChatMessage>
                <UIChatMessage>
                  <option name="actions">
                    <list />
                  </option>
                  <option name="changeToOptimize" value="true" />
                  <option name="codebaseReferences">
                    <list />
                  </option>
                  <option name="codebaseStatus" value="init" />
                  <option name="command" value="fix" />
                  <option name="content" value="从错误信息来看，问题是由于 Spring Boot 尝试加载一个名为 `keystore.p12` 的 SSL 证书文件，但该文件在类路径（classpath）中不存在。这不是代码逻辑问题，而是配置或资源文件缺失的问题。&#10;&#10;### 解决方法：&#10;1. **检查是否需要 SSL 配置**：&#10;   - 如果你的应用不需要 HTTPS（SSL），可以移除 Spring Boot 中的 SSL 相关配置（通常在 `application.properties` 或 `application.yml` 中）。&#10;   - 例如，检查是否有类似以下配置：&#10;     ```properties&#10;     server.ssl.key-store=classpath:keystore.p12&#10;     server.ssl.key-store-password=yourpassword&#10;     server.ssl.key-store-type=PKCS12&#10;     ```&#10;     如果有，可以暂时注释掉这些配置，或者提供正确的 `keystore.p12` 文件。&#10;&#10;2. **如果需要 SSL**：&#10;   - 确保 `keystore.p12` 文件存在于项目的 `src/main/resources` 目录下（这是默认的类路径位置）。&#10;   - 如果文件不在该目录，请将其移动到 `src/main/resources`，或者更新配置中的路径以匹配实际文件位置。&#10;&#10;3. **验证文件是否存在**：&#10;   - 检查 `src/main/resources` 目录下是否有 `keystore.p12` 文件。&#10;   - 如果没有，你需要生成或获取一个 PKCS12 格式的 SSL 证书文件。&#10;&#10;### 总结：&#10;当前错误是由于缺少 `keystore.p12` 文件导致的。根据你的需求：&#10;- 如果不需要 HTTPS，移除 SSL 配置。&#10;- 如果需要 HTTPS，确保 `keystore.p12` 文件存在于 `src/main/resources` 目录下。&#10;&#10;不需要修改 `BookkeepingApplication.java` 文件本身，问题出在配置或资源文件上。" />
                  <option name="cost" value="11313" />
                  <option name="createdAt" value="1747989127668" />
                  <option name="followup">
                    <list />
                  </option>
                  <option name="id" value="0196fc45359774479d843761053dfad5" />
                  <option name="knowledgeReferences">
                    <list />
                  </option>
                  <option name="localReferences">
                    <list>
                      <LocalReferences>
                        <option name="isRequestStage" value="true" />
                        <option name="range">
                          <RefRange />
                        </option>
                        <option name="uri" value="{&quot;path&quot;:&quot;file:///C:/Users/10078/Desktop/bookkeeping/bookkeeping_server/src/main/java/com/bookkeeping/BookkeepingApplication.java&quot;}" />
                      </LocalReferences>
                    </list>
                  </option>
                  <option name="parser">
                    <SimpleMarkdownStreamParser>
                      <option name="columns">
                        <list>
                          <option value="109" />
                          <option value="-1" />
                          <option value="8" />
                          <option value="20" />
                          <option value="106" />
                          <option value="19" />
                          <option value="17" />
                          <option value="47" />
                          <option value="46" />
                          <option value="36" />
                          <option value="7" />
                          <option value="46" />
                          <option value="-1" />
                          <option value="15" />
                          <option value="68" />
                          <option value="62" />
                          <option value="-1" />
                          <option value="15" />
                          <option value="53" />
                          <option value="40" />
                          <option value="-1" />
                          <option value="6" />
                          <option value="37" />
                          <option value="23" />
                          <option value="61" />
                          <option value="-1" />
                          <option value="53" />
                        </list>
                      </option>
                      <option name="content" value="从错误信息来看，问题是由于 Spring Boot 尝试加载一个名为 `keystore.p12` 的 SSL 证书文件，但该文件在类路径（classpath）中不存在。这不是代码逻辑问题，而是配置或资源文件缺失的问题。&#10;&#10;### 解决方法：&#10;1. **检查是否需要 SSL 配置**：&#10;   - 如果你的应用不需要 HTTPS（SSL），可以移除 Spring Boot 中的 SSL 相关配置（通常在 `application.properties` 或 `application.yml` 中）。&#10;   - 例如，检查是否有类似以下配置：&#10;     ```properties&#10;     server.ssl.key-store=classpath:keystore.p12&#10;     server.ssl.key-store-password=yourpassword&#10;     server.ssl.key-store-type=PKCS12&#10;     ```&#10;     如果有，可以暂时注释掉这些配置，或者提供正确的 `keystore.p12` 文件。&#10;&#10;2. **如果需要 SSL**：&#10;   - 确保 `keystore.p12` 文件存在于项目的 `src/main/resources` 目录下（这是默认的类路径位置）。&#10;   - 如果文件不在该目录，请将其移动到 `src/main/resources`，或者更新配置中的路径以匹配实际文件位置。&#10;&#10;3. **验证文件是否存在**：&#10;   - 检查 `src/main/resources` 目录下是否有 `keystore.p12` 文件。&#10;   - 如果没有，你需要生成或获取一个 PKCS12 格式的 SSL 证书文件。&#10;&#10;### 总结：&#10;当前错误是由于缺少 `keystore.p12` 文件导致的。根据你的需求：&#10;- 如果不需要 HTTPS，移除 SSL 配置。&#10;- 如果需要 HTTPS，确保 `keystore.p12` 文件存在于 `src/main/resources` 目录下。&#10;&#10;不需要修改 `BookkeepingApplication.java` 文件本身，问题出在配置或资源文件上。&#10;" />
                      <option name="nodes">
                        <list>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="从错误信息来看，问题是由于 Spring Boot 尝试加载一个名为 `keystore.p12` 的 SSL 证书文件，但该文件在类路径（classpath）中不存在。这不是代码逻辑问题，而是配置或资源文件缺失的问题。" />
                            <option name="contentId" value="2128771207" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value=" 解决方法：" />
                            <option name="contentId" value="-195204594" />
                            <option name="level" value="3" />
                            <option name="settled" value="true" />
                            <option name="type" value="heading" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="1. **检查是否需要 SSL 配置**：" />
                            <option name="contentId" value="787071045" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="如果你的应用不需要 HTTPS（SSL），可以移除 Spring Boot 中的 SSL 相关配置（通常在 `application.properties` 或 `application.yml` 中）。" />
                            <option name="contentId" value="1385522852" />
                            <option name="indentSize" value="3" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="例如，检查是否有类似以下配置：" />
                            <option name="contentId" value="-1723363814" />
                            <option name="indentSize" value="3" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="server.ssl.key-store=classpath:keystore.p12&#10;server.ssl.key-store-password=yourpassword&#10;server.ssl.key-store-type=PKCS12&#10;" />
                            <option name="contentId" value="-264029870" />
                            <option name="expectEnding" value="     ```" />
                            <option name="indentSize" value="5" />
                            <option name="language" value="properties" />
                            <option name="settled" value="true" />
                            <option name="type" value="code-block" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="     如果有，可以暂时注释掉这些配置，或者提供正确的 `keystore.p12` 文件。" />
                            <option name="contentId" value="302193784" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="2. **如果需要 SSL**：" />
                            <option name="contentId" value="-1041754705" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="确保 `keystore.p12` 文件存在于项目的 `src/main/resources` 目录下（这是默认的类路径位置）。" />
                            <option name="contentId" value="1214818874" />
                            <option name="indentSize" value="3" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="如果文件不在该目录，请将其移动到 `src/main/resources`，或者更新配置中的路径以匹配实际文件位置。" />
                            <option name="contentId" value="701246256" />
                            <option name="indentSize" value="3" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="3. **验证文件是否存在**：" />
                            <option name="contentId" value="-1731408630" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="检查 `src/main/resources` 目录下是否有 `keystore.p12` 文件。" />
                            <option name="contentId" value="736088513" />
                            <option name="indentSize" value="3" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="如果没有，你需要生成或获取一个 PKCS12 格式的 SSL 证书文件。" />
                            <option name="contentId" value="-117084320" />
                            <option name="indentSize" value="3" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value=" 总结：" />
                            <option name="contentId" value="25699330" />
                            <option name="level" value="3" />
                            <option name="settled" value="true" />
                            <option name="type" value="heading" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="当前错误是由于缺少 `keystore.p12` 文件导致的。根据你的需求：" />
                            <option name="contentId" value="1344966882" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value=" 如果不需要 HTTPS，移除 SSL 配置。" />
                            <option name="contentId" value="-500923581" />
                            <option name="indentSize" value="0" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value=" 如果需要 HTTPS，确保 `keystore.p12` 文件存在于 `src/main/resources` 目录下。" />
                            <option name="contentId" value="-256762803" />
                            <option name="indentSize" value="0" />
                            <option name="settled" value="true" />
                            <option name="startSymbol" value="-" />
                            <option name="type" value="list-item" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="不需要修改 `BookkeepingApplication.java` 文件本身，问题出在配置或资源文件上。" />
                            <option name="contentId" value="961490285" />
                            <option name="settled" value="true" />
                            <option name="type" value="line" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                          <MarkdownNode>
                            <option name="children">
                              <list />
                            </option>
                            <option name="content" value="" />
                            <option name="contentId" value="0" />
                            <option name="settled" value="false" />
                            <option name="type" value="undetermined" />
                            <option name="xmlData">
                              <XmlNode />
                            </option>
                          </MarkdownNode>
                        </list>
                      </option>
                      <option name="parserState">
                        <ParserState>
                          <option name="line" value="27" />
                          <option name="column" value="-1" />
                          <option name="offset" value="943" />
                          <option name="moveCursor" value="true" />
                        </ParserState>
                      </option>
                    </SimpleMarkdownStreamParser>
                  </option>
                  <option name="references">
                    <list />
                  </option>
                  <option name="role" value="assistant" />
                  <option name="topic" value="workspace" />
                </UIChatMessage>
              </list>
            </option>
            <option name="messagesV3">
              <list>
                <ChatMessageV3>
                  <option name="role" value="user" />
                  <option name="content" value="/fix 修复报错:&#10;java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:473) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:532) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:655) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]&#10;代码上下文:&#10;```java&#10;/**&#10; * Creates a new {@code ThreadPoolExecutor} with the given initial&#10; * parameters and default thread factory and rejected execution handler.&#10; * It may be more convenient to use one of the {@link Executors} factory&#10; * methods instead of this general purpose constructor.&#10; *&#10; * @param corePoolSize the number of threads to keep in the pool, even&#10; *        if they are idle, unless {@code allowCoreThreadTimeOut} is set&#10; * @param maximumPoolSize the maximum number of threads to allow in the&#10; *        pool&#10; * @param keepAliveTime when the number of threads is greater than&#10; *        the core, this is the maximum time that excess idle threads&#10; *        will wait for new tasks before terminating.&#10; * @param unit the time unit for the {@code keepAliveTime} argument&#10; * @param workQueue the queue to use for holding tasks before they are&#10; *        executed.  This queue will hold only the {@code Runnable}&#10; *        tasks submitted by the {@code execute} method.&#10; * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;&#10; *         {@code corePoolSize &lt; 0}&lt;br&gt;&#10; *         {@code keepAliveTime &lt; 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt; corePoolSize}&#10; * @throws NullPointerException if {@code workQueue} is null&#10; */&#10;public ThreadPoolExecutor(int corePoolSize,&#10;                          int maximumPoolSize,&#10;                          long keepAliveTime,&#10;                          TimeUnit unit,&#10;                          BlockingQueue&lt;Runnable&gt; workQueue) {&#10;    this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,&#10;         Executors.defaultThreadFactory(), defaultHandler);&#10;}&#10;```&#10;" />
                  <option name="extra">
                    <ChatMessageExtra>
                      <option name="agent" value="workspace" />
                      <option name="cmd" value="fix" />
                      <option name="code" value="kzxpztv xln.yllppvvkrmt.xlmurt;&#10;&#10;rnklig lit.hkirmtuiznvdlip.xlmgvcg.zmmlgzgrlm.Yvzm;&#10;rnklig lit.hkirmtuiznvdlip.xlmgvcg.zmmlgzgrlm.Xlmurtfizgrlm;&#10;rnklig lit.hkirmtuiznvdlip.dvy.hvieovg.xlmurt.zmmlgzgrlm.XlihIvtrhgib;&#10;rnklig lit.hkirmtuiznvdlip.dvy.hvieovg.xlmurt.zmmlgzgrlm.DvyNexXlmurtfivi;&#10;&#10;@Xlmurtfizgrlm&#10;kfyorx xozhh XlihXlmurt {&#10;    @Yvzm&#10;    kfyorx DvyNexXlmurtfivi xlihXlmurtfivi() {&#10;        ivgfim mvd DvyNexXlmurtfivi() {&#10;            @Leviirwv&#10;            kfyorx elrw zwwXlihNzkkrmth(XlihIvtrhgib ivtrhgib) {&#10;                ivtrhgib.zwwNzkkrmt(&quot;/**&quot;)&#10;                        .zooldvwLirtrmh(&#10;                            &quot;sggk://olxzoslhg:6999&quot;,&#10;                            &quot;sggk://872.9.9.8:6999&quot;,&#10;                            &quot;sggk://olxzoslhg:1919&quot;,&#10;                            &quot;sggk://872.9.9.8:1919&quot;&#10;                        )&#10;                        .zooldvwNvgslwh(&quot;TVG&quot;, &quot;KLHG&quot;, &quot;KFG&quot;, &quot;WVOVGV&quot;, &quot;LKGRLMH&quot;)&#10;                        .zooldvwSvzwvih(&quot;*&quot;)&#10;                        .zooldXivwvmgrzoh(gifv);&#10;            }&#10;        };&#10;    }&#10;}&#10;" />
                      <option name="path" value="C:\Users\10078\Desktop\bookkeeping\bookkeeping_server\src\main\java\com\bookkeeping\config\CorsConfig.java" />
                    </ChatMessageExtra>
                  </option>
                </ChatMessageV3>
                <ChatMessageV3>
                  <option name="role" value="assistant" />
                  <option name="content" value="这个错误是因为当 `allowCredentials(true)` 时，不能使用通配符 `*` 作为 `allowedOrigins` 的值。你需要明确列出所有允许的源，或者使用 `allowedOriginPatterns`。&#10;&#10;修改后的代码如下：&#10;&#10;```java&#10;package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                        .allowedOrigins(&#10;                            &quot;http://localhost:3000&quot;,&#10;                            &quot;http://127.0.0.1:3000&quot;,&#10;                            &quot;http://localhost:8080&quot;,&#10;                            &quot;http://127.0.0.1:8080&quot;&#10;                        )&#10;                        .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                        .allowedHeaders(&quot;*&quot;)&#10;                        .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;```&#10;&#10;实际上你的代码已经是正确的，因为已经明确列出了所有允许的源，没有使用 `*`。错误可能是由于其他配置或依赖版本问题导致的。请检查：&#10;&#10;1. 确保没有其他地方设置了全局的 CORS 配置&#10;2. 检查 Spring Boot 或 Spring Web 的版本是否兼容&#10;3. 确保没有其他配置覆盖了这个 CORS 配置&#10;&#10;如果问题仍然存在，可以尝试使用 `allowedOriginPatterns` 替代 `allowedOrigins`（Spring 5.3+ 支持）：&#10;&#10;```java&#10;registry.addMapping(&quot;/**&quot;)&#10;        .allowedOriginPatterns(&quot;*&quot;)  // 注意：这实际上又回到了通配符，可能不适用于需要凭证的情况&#10;        .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;        .allowedHeaders(&quot;*&quot;)&#10;        .allowCredentials(true);&#10;```&#10;&#10;但更推荐保持你原来的代码，并检查是否有其他配置冲突。" />
                  <option name="extra">
                    <ChatMessageExtra />
                  </option>
                </ChatMessageV3>
                <ChatMessageV3>
                  <option name="role" value="user" />
                  <option name="content" value="/fix 修复报错:&#10;org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:711) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:385) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:313) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:390) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:249) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:344) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]&#10;Caused by: java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:473) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:532) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;... 68 common frames omitted&#10;代码上下文:&#10;```java&#10;/**&#10; * Creates a new {@code ThreadPoolExecutor} with the given initial&#10; * parameters and default thread factory and rejected execution handler.&#10; * It may be more convenient to use one of the {@link Executors} factory&#10; * methods instead of this general purpose constructor.&#10; *&#10; * @param corePoolSize the number of threads to keep in the pool, even&#10; *        if they are idle, unless {@code allowCoreThreadTimeOut} is set&#10; * @param maximumPoolSize the maximum number of threads to allow in the&#10; *        pool&#10; * @param keepAliveTime when the number of threads is greater than&#10; *        the core, this is the maximum time that excess idle threads&#10; *        will wait for new tasks before terminating.&#10; * @param unit the time unit for the {@code keepAliveTime} argument&#10; * @param workQueue the queue to use for holding tasks before they are&#10; *        executed.  This queue will hold only the {@code Runnable}&#10; *        tasks submitted by the {@code execute} method.&#10; * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;&#10; *         {@code corePoolSize &lt; 0}&lt;br&gt;&#10; *         {@code keepAliveTime &lt; 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt; corePoolSize}&#10; * @throws NullPointerException if {@code workQueue} is null&#10; */&#10;public ThreadPoolExecutor(int corePoolSize,&#10;                          int maximumPoolSize,&#10;                          long keepAliveTime,&#10;                          TimeUnit unit,&#10;                          BlockingQueue&lt;Runnable&gt; workQueue) {&#10;    this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,&#10;         Executors.defaultThreadFactory(), defaultHandler);&#10;}&#10;```&#10;" />
                  <option name="extra">
                    <ChatMessageExtra>
                      <option name="agent" value="workspace" />
                      <option name="cmd" value="fix" />
                      <option name="code" value="kzxpztv xln.yllppvvkrmt.xlmurt;&#10;&#10;rnklig lit.hkirmtuiznvdlip.xlmgvcg.zmmlgzgrlm.Yvzm;&#10;rnklig lit.hkirmtuiznvdlip.xlmgvcg.zmmlgzgrlm.Xlmurtfizgrlm;&#10;rnklig lit.hkirmtuiznvdlip.dvy.hvieovg.xlmurt.zmmlgzgrlm.XlihIvtrhgib;&#10;rnklig lit.hkirmtuiznvdlip.dvy.hvieovg.xlmurt.zmmlgzgrlm.DvyNexXlmurtfivi;&#10;&#10;@Xlmurtfizgrlm&#10;kfyorx xozhh XlihXlmurt {&#10;    @Yvzm&#10;    kfyorx DvyNexXlmurtfivi xlihXlmurtfivi() {&#10;        ivgfim mvd DvyNexXlmurtfivi() {&#10;            @Leviirwv&#10;            kfyorx elrw zwwXlihNzkkrmth(XlihIvtrhgib ivtrhgib) {&#10;                ivtrhgib.zwwNzkkrmt(&quot;/**&quot;)&#10;                         .zooldvwNvgslwh(&quot;TVG&quot;, &quot;KLHG&quot;, &quot;KFG&quot;, &quot;WVOVGV&quot;, &quot;LKGRLMH&quot;)&#10;                        .zooldvwSvzwvih(&quot;*&quot;)&#10;                        .zooldXivwvmgrzoh(gifv);&#10;&#10;            }&#10;        };&#10;    }&#10;}&#10;" />
                      <option name="path" value="C:\Users\10078\Desktop\bookkeeping\bookkeeping_server\src\main\java\com\bookkeeping\config\CorsConfig.java" />
                    </ChatMessageExtra>
                  </option>
                </ChatMessageV3>
                <ChatMessageV3>
                  <option name="role" value="assistant" />
                  <option name="content" value="根据错误信息，`allowCredentials(true)` 和 `allowedOrigins(&quot;*&quot;)` 不能同时使用，因为当允许凭证时，`allowedOrigins` 不能使用通配符 `*`。&#10;&#10;### 修复方法：&#10;将 `allowedOrigins(&quot;*&quot;)` 替换为具体的允许的源，或者使用 `allowedOriginPatterns`（Spring 5.3+ 支持）。&#10;&#10;#### 修改后的代码：&#10;```java&#10;package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                         .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                         // 替换为具体的允许的源，例如：&#10;                         .allowedOrigins(&quot;http://example.com&quot;, &quot;http://localhost:8080&quot;) // 修改为你的实际前端地址&#10;                         .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;```&#10;&#10;或者使用 `allowedOriginPatterns`（如果使用 Spring 5.3+）：&#10;```java&#10;package com.bookkeeping.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#10;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#10;&#10;@Configuration&#10;public class CorsConfig {&#10;    @Bean&#10;    public WebMvcConfigurer corsConfigurer() {&#10;        return new WebMvcConfigurer() {&#10;            @Override&#10;            public void addCorsMappings(CorsRegistry registry) {&#10;                registry.addMapping(&quot;/**&quot;)&#10;                         .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)&#10;                         // 使用 allowedOriginPatterns 允许通配符（Spring 5.3+）&#10;                         .allowedOriginPatterns(&quot;*&quot;) // 允许所有源（慎用，生产环境建议明确指定）&#10;                         .allowCredentials(true);&#10;            }&#10;        };&#10;    }&#10;}&#10;```&#10;&#10;### 推荐：&#10;- 如果是生产环境，建议明确指定允许的源（如 `allowedOrigins(&quot;http://your-frontend-domain.com&quot;)`）。&#10;- 如果是开发环境，可以使用 `allowedOriginPatterns(&quot;*&quot;)`（但要注意安全性）。" />
                  <option name="extra">
                    <ChatMessageExtra />
                  </option>
                </ChatMessageV3>
                <ChatMessageV3>
                  <option name="role" value="user" />
                  <option name="content" value="/fix 修复报错:&#10;org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store 'classpath:keystore.p12'&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:163) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at com.bookkeeping.BookkeepingApplication.main(BookkeepingApplication.java:9) [classes/:na]&#10;Caused by: org.springframework.boot.web.server.WebServerException: Could not load key store 'classpath:keystore.p12'&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:132) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSsl(SslConnectorCustomizer.java:92) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.customize(SslConnectorCustomizer.java:57) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(TomcatServletWebServerFactory.java:351) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(TomcatServletWebServerFactory.java:329) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:182) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:160) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;... 8 common frames omitted&#10;Caused by: java.io.FileNotFoundException: class path resource [keystore.p12] cannot be resolved to URL because it does not exist&#10;&#9;at org.springframework.util.ResourceUtils.getURL(ResourceUtils.java:137) ~[spring-core-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:129) ~[spring-boot-2.5.4.jar:2.5.4]&#10;&#9;... 15 common frames omitted&#10;代码上下文:&#10;```java&#10;public static void main(String[] args) {&#10;    SpringApplication.run(BookkeepingApplication.class, args);&#10;}&#10;```&#10;" />
                  <option name="extra">
                    <ChatMessageExtra>
                      <option name="agent" value="workspace" />
                      <option name="cmd" value="fix" />
                      <option name="code" value="kzxpztv xln.yllppvvkrmt;&#10;&#10;rnklig lit.hkirmtuiznvdlip.yllg.HkirmtZkkorxzgrlm;&#10;rnklig lit.hkirmtuiznvdlip.yllg.zfglxlmurtfiv.HkirmtYllgZkkorxzgrlm;&#10;&#10;@HkirmtYllgZkkorxzgrlm&#10;kfyorx xozhh YllppvvkrmtZkkorxzgrlm {&#10;    kfyorx hgzgrx elrw nzrm(Hgirmt[] zith) {&#10;        HkirmtZkkorxzgrlm.ifm(YllppvvkrmtZkkorxzgrlm.xozhh, zith);&#10;    }&#10;}" />
                      <option name="path" value="C:\Users\10078\Desktop\bookkeeping\bookkeeping_server\src\main\java\com\bookkeeping\BookkeepingApplication.java" />
                    </ChatMessageExtra>
                  </option>
                </ChatMessageV3>
                <ChatMessageV3>
                  <option name="role" value="assistant" />
                  <option name="content" value="从错误信息来看，问题是由于 Spring Boot 尝试加载一个名为 `keystore.p12` 的 SSL 证书文件，但该文件在类路径（classpath）中不存在。这不是代码逻辑问题，而是配置或资源文件缺失的问题。&#10;&#10;### 解决方法：&#10;1. **检查是否需要 SSL 配置**：&#10;   - 如果你的应用不需要 HTTPS（SSL），可以移除 Spring Boot 中的 SSL 相关配置（通常在 `application.properties` 或 `application.yml` 中）。&#10;   - 例如，检查是否有类似以下配置：&#10;     ```properties&#10;     server.ssl.key-store=classpath:keystore.p12&#10;     server.ssl.key-store-password=yourpassword&#10;     server.ssl.key-store-type=PKCS12&#10;     ```&#10;     如果有，可以暂时注释掉这些配置，或者提供正确的 `keystore.p12` 文件。&#10;&#10;2. **如果需要 SSL**：&#10;   - 确保 `keystore.p12` 文件存在于项目的 `src/main/resources` 目录下（这是默认的类路径位置）。&#10;   - 如果文件不在该目录，请将其移动到 `src/main/resources`，或者更新配置中的路径以匹配实际文件位置。&#10;&#10;3. **验证文件是否存在**：&#10;   - 检查 `src/main/resources` 目录下是否有 `keystore.p12` 文件。&#10;   - 如果没有，你需要生成或获取一个 PKCS12 格式的 SSL 证书文件。&#10;&#10;### 总结：&#10;当前错误是由于缺少 `keystore.p12` 文件导致的。根据你的需求：&#10;- 如果不需要 HTTPS，移除 SSL 配置。&#10;- 如果需要 HTTPS，确保 `keystore.p12` 文件存在于 `src/main/resources` 目录下。&#10;&#10;不需要修改 `BookkeepingApplication.java` 文件本身，问题出在配置或资源文件上。" />
                  <option name="extra">
                    <ChatMessageExtra />
                  </option>
                </ChatMessageV3>
              </list>
            </option>
            <option name="sessionId" value="0196f160daae7bb3b4b766f3d0e44621" />
            <option name="source" value="codeAction" />
          </ChatSession>
        </option>
        <option name="conversationId" value="0196f160daae7bb3b4b766f3d0e44621" />
        <option name="conversation">
          <Conversation>
            <option name="createTime" value="1747989114662" />
            <option name="id" value="0196f160daae7bb3b4b766f3d0e44621" />
            <option name="title" value="/fix修复报错:&#10;java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.&#10;&#9;at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:473) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:532) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:655) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.9.jar:5.3.9]&#10;&#9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.52.jar:4.0.FR]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.5.2.jar:5.5.2]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.9.jar:5.3.9]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.52.jar:9.0.52]&#10;&#9;at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]&#10;代码上下文:&#10;```java&#10;/**&#10; * Creates a new {@code ThreadPoolExecutor} with the given initial&#10; * parameters and default thread factory and rejected execution handler.&#10; * It may be more convenient to use one of the {@link Executors} factory&#10; * methods instead of this general purpose constructor.&#10; *&#10; * @param corePoolSize the number of threads to keep in the pool, even&#10; *        if they are idle, unless {@code allowCoreThreadTimeOut} is set&#10; * @param maximumPoolSize the maximum number of threads to allow in the&#10; *        pool&#10; * @param keepAliveTime when the number of threads is greater than&#10; *        the core, this is the maximum time that excess idle threads&#10; *        will wait for new tasks before terminating.&#10; * @param unit the time unit for the {@code keepAliveTime} argument&#10; * @param workQueue the queue to use for holding tasks before they are&#10; *        executed.  This queue will hold only the {@code Runnable}&#10; *        tasks submitted by the {@code execute} method.&#10; * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;&#10; *         {@code corePoolSize &lt; 0}&lt;br&gt;&#10; *         {@code keepAliveTime &lt; 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;&#10; *         {@code maximumPoolSize &lt; corePoolSize}&#10; * @throws NullPointerException if {@code workQueue} is null&#10; */&#10;public ThreadPoolExecutor(int corePoolSize,&#10;                          int maximumPoolSize,&#10;                          long keepAliveTime,&#10;                          TimeUnit unit,&#10;                          BlockingQueue&lt;Runnable&gt; workQueue) {&#10;    this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,&#10;         Executors.defaultThreadFactory(), defaultHandler);&#10;}&#10;```" />
            <option name="turns">
              <list>
                <Turn>
                  <option name="agent" value="workspace" />
                  <option name="answer" value="从错误信息来看，问题是由于 Hkirmt Yllg 尝试加载一个名为 `pvbhgliv.k87` 的 HHO 证书文件，但该文件在类路径（xozhhkzgs）中不存在。这不是代码逻辑问题，而是配置或资源文件缺失的问题。&#10;&#10;### 解决方法：&#10;8. **检查是否需要 HHO 配置**：&#10;   - 如果你的应用不需要 SGGKH（HHO），可以移除 Hkirmt Yllg 中的 HHO 相关配置（通常在 `zkkorxzgrlm.kilkvigrvh` 或 `zkkorxzgrlm.bno` 中）。&#10;   - 例如，检查是否有类似以下配置：&#10;     ```kilkvigrvh&#10;     hvievi.hho.pvb-hgliv=xozhhkzgs:pvbhgliv.k87&#10;     hvievi.hho.pvb-hgliv-kzhhdliw=blfikzhhdliw&#10;     hvievi.hho.pvb-hgliv-gbkv=KPXH87&#10;     ```&#10;     如果有，可以暂时注释掉这些配置，或者提供正确的 `pvbhgliv.k87` 文件。&#10;&#10;7. **如果需要 HHO**：&#10;   - 确保 `pvbhgliv.k87` 文件存在于项目的 `hix/nzrm/ivhlfixvh` 目录下（这是默认的类路径位置）。&#10;   - 如果文件不在该目录，请将其移动到 `hix/nzrm/ivhlfixvh`，或者更新配置中的路径以匹配实际文件位置。&#10;&#10;6. **验证文件是否存在**：&#10;   - 检查 `hix/nzrm/ivhlfixvh` 目录下是否有 `pvbhgliv.k87` 文件。&#10;   - 如果没有，你需要生成或获取一个 KPXH87 格式的 HHO 证书文件。&#10;&#10;### 总结：&#10;当前错误是由于缺少 `pvbhgliv.k87` 文件导致的。根据你的需求：&#10;- 如果不需要 SGGKH，移除 HHO 配置。&#10;- 如果需要 SGGKH，确保 `pvbhgliv.k87` 文件存在于 `hix/nzrm/ivhlfixvh` 目录下。&#10;&#10;不需要修改 `YllppvvkrmtZkkorxzgrlm.qzez` 文件本身，问题出在配置或资源文件上。" />
                  <option name="chatResource" value="user" />
                  <option name="codeReferences">
                    <list>
                      <CodeReferencesBean>
                        <option name="content" value="kzxpztv xln.yllppvvkrmt;&#10;&#10;rnklig lit.hkirmtuiznvdlip.yllg.HkirmtZkkorxzgrlm;&#10;rnklig lit.hkirmtuiznvdlip.yllg.zfglxlmurtfiv.HkirmtYllgZkkorxzgrlm;&#10;&#10;@HkirmtYllgZkkorxzgrlm&#10;kfyorx xozhh YllppvvkrmtZkkorxzgrlm {&#10;    kfyorx hgzgrx elrw nzrm(Hgirmt[] zith) {&#10;        HkirmtZkkorxzgrlm.ifm(YllppvvkrmtZkkorxzgrlm.xozhh, zith);&#10;    }&#10;}" />
                        <option name="end_line" value="10" />
                        <option name="filename" value="BookkeepingApplication.java" />
                        <option name="language" value="JAVA" />
                        <option name="range">
                          <Range>
                            <option name="end">
                              <Position>
                                <option name="character" value="1" />
                                <option name="line" value="10" />
                              </Position>
                            </option>
                            <option name="start">
                              <Position />
                            </option>
                          </Range>
                        </option>
                        <option name="type" value="editor" />
                        <option name="url" value="file:///C:/Users/10078/Desktop/bookkeeping/bookkeeping_server/src/main/java/com/bookkeeping/BookkeepingApplication.java" />
                      </CodeReferencesBean>
                    </list>
                  </option>
                  <option name="command" value="fix" />
                  <option name="conversationId" value="0196f160daae7bb3b4b766f3d0e44621" />
                  <option name="historyDocumentMap">
                    <map>
                      <entry key="file:///C:/Users/10078/Desktop/bookkeeping/bookkeeping_server/src/main/java/com/bookkeeping/BookkeepingApplication.java" value="package com.bookkeeping;&#10;&#10;import org.springframework.boot.SpringApplication;&#10;import org.springframework.boot.autoconfigure.SpringBootApplication;&#10;&#10;@SpringBootApplication&#10;public class BookkeepingApplication {&#10;    public static void main(String[] args) {&#10;        SpringApplication.run(BookkeepingApplication.class, args);&#10;    }&#10;}" />
                    </map>
                  </option>
                  <option name="messageId" value="0196fc45359774479d843761053dfad5" />
                  <option name="question" value="/urc 修复报错:&#10;lit.hkirmtuiznvdlip.xlmgvcg.ZkkorxzgrlmXlmgvcgVcxvkgrlm: Fmzyov gl hgzig dvy hvievi; mvhgvw vcxvkgrlm rh lit.hkirmtuiznvdlip.yllg.dvy.hvievi.DvyHvieviVcxvkgrlm: Xlfow mlg olzw pvb hgliv 'xozhhkzgs:pvbhgliv.k87'&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.hvieovg.xlmgvcg.HvieovgDvyHvieviZkkorxzgrlmXlmgvcg.lmIvuivhs(HvieovgDvyHvieviZkkorxzgrlmXlmgvcg.qzez:836) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.xlmgvcg.hfkklig.ZyhgizxgZkkorxzgrlmXlmgvcg.ivuivhs(ZyhgizxgZkkorxzgrlmXlmgvcg.qzez:422) ~[hkirmt-xlmgvcg-4.6.0.qzi:4.6.0]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.hvieovg.xlmgvcg.HvieovgDvyHvieviZkkorxzgrlmXlmgvcg.ivuivhs(HvieovgDvyHvieviZkkorxzgrlmXlmgvcg.qzez:854) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.HkirmtZkkorxzgrlm.ivuivhs(HkirmtZkkorxzgrlm.qzez:245) [hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.HkirmtZkkorxzgrlm.ivuivhsXlmgvcg(HkirmtZkkorxzgrlm.qzez:565) [hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.HkirmtZkkorxzgrlm.ifm(HkirmtZkkorxzgrlm.qzez:661) [hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.HkirmtZkkorxzgrlm.ifm(HkirmtZkkorxzgrlm.qzez:8656) [hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.HkirmtZkkorxzgrlm.ifm(HkirmtZkkorxzgrlm.qzez:8667) [hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg xln.yllppvvkrmt.YllppvvkrmtZkkorxzgrlm.nzrm(YllppvvkrmtZkkorxzgrlm.qzez:0) [xozhhvh/:mz]&#10;Xzfhvw yb: lit.hkirmtuiznvdlip.yllg.dvy.hvievi.DvyHvieviVcxvkgrlm: Xlfow mlg olzw pvb hgliv 'xozhhkzgs:pvbhgliv.k87'&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.vnyvwwvw.glnxzg.HhoXlmmvxgliXfhglnravi.xlmurtfivHhoPvbHgliv(HhoXlmmvxgliXfhglnravi.qzez:867) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.vnyvwwvw.glnxzg.HhoXlmmvxgliXfhglnravi.xlmurtfivHho(HhoXlmmvxgliXfhglnravi.qzez:07) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.vnyvwwvw.glnxzg.HhoXlmmvxgliXfhglnravi.xfhglnrav(HhoXlmmvxgliXfhglnravi.qzez:42) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.vnyvwwvw.glnxzg.GlnxzgHvieovgDvyHvieviUzxglib.xfhglnravHho(GlnxzgHvieovgDvyHvieviUzxglib.qzez:648) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.vnyvwwvw.glnxzg.GlnxzgHvieovgDvyHvieviUzxglib.xfhglnravXlmmvxgli(GlnxzgHvieovgDvyHvieviUzxglib.qzez:670) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.vnyvwwvw.glnxzg.GlnxzgHvieovgDvyHvieviUzxglib.tvgDvyHvievi(GlnxzgHvieovgDvyHvieviUzxglib.qzez:808) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.hvieovg.xlmgvcg.HvieovgDvyHvieviZkkorxzgrlmXlmgvcg.xivzgvDvyHvievi(HvieovgDvyHvieviZkkorxzgrlmXlmgvcg.qzez:817) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.hvieovg.xlmgvcg.HvieovgDvyHvieviZkkorxzgrlmXlmgvcg.lmIvuivhs(HvieovgDvyHvieviZkkorxzgrlmXlmgvcg.qzez:839) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;... 1 xlnnlm uiznvh lnrggvw&#10;Xzfhvw yb: qzez.rl.UrovMlgUlfmwVcxvkgrlm: xozhh kzgs ivhlfixv [pvbhgliv.k87] xzmmlg yv ivhloevw gl FIO yvxzfhv rg wlvh mlg vcrhg&#10;&#9;zg lit.hkirmtuiznvdlip.fgro.IvhlfixvFgroh.tvgFIO(IvhlfixvFgroh.qzez:862) ~[hkirmt-xliv-4.6.0.qzi:4.6.0]&#10;&#9;zg lit.hkirmtuiznvdlip.yllg.dvy.vnyvwwvw.glnxzg.HhoXlmmvxgliXfhglnravi.xlmurtfivHhoPvbHgliv(HhoXlmmvxgliXfhglnravi.qzez:870) ~[hkirmt-yllg-7.4.5.qzi:7.4.5]&#10;&#9;... 84 xlnnlm uiznvh lnrggvw&#10;代码上下文:&#10;```qzez&#10;kfyorx hgzgrx elrw nzrm(Hgirmt[] zith) {&#10;    HkirmtZkkorxzgrlm.ifm(YllppvvkrmtZkkorxzgrlm.xozhh, zith);&#10;}&#10;```&#10;" />
                  <option name="rating" value="UNRATED" />
                  <option name="referenceBeans">
                    <list />
                  </option>
                  <option name="status" value="SUCCESS" />
                  <option name="variables">
                    <list />
                  </option>
                </Turn>
              </list>
            </option>
            <option name="updateTime" value="1747989125650" />
          </Conversation>
        </option>
      </WebConversation>
    </option>
  </component>
</project>